{"ast":null,"code":"var _jsxFileName = \"/Users/kara/Desktop/neog/react-exercise/src/component/PasswordMatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PasswordMatch = () => {\n  _s();\n\n  const [pswd, setPswd] = useState(\"\");\n  const [cPswd, setCpswd] = useState(\"\");\n\n  const changePswdHandler = event => {\n    let val = event.target.value;\n    setPswd(val);\n  };\n\n  const changeCPswdHandler = event => {\n    let val = event.target.value;\n    setCpswd(val);\n  };\n\n  const CheckPasswordMatch = () => {\n    if (pswd !== cPswd) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Passwords do not match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password Matched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \"Password:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: pswd,\n      placeholder: \"Enter Password\",\n      onChange: changePswdHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), \"Confirm Password:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: cPswd,\n      placeholder: \"Confirm Password\",\n      onChange: changeCPswdHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckPasswordMatch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PasswordMatch, \"vcAUI+/GADlr/2p1QnoQ8rpVYdI=\");\n\n_c = PasswordMatch;\nexport default PasswordMatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordMatch\");","map":{"version":3,"sources":["/Users/kara/Desktop/neog/react-exercise/src/component/PasswordMatch.js"],"names":["React","useState","PasswordMatch","pswd","setPswd","cPswd","setCpswd","changePswdHandler","event","val","target","value","changeCPswdHandler","CheckPasswordMatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAvB;AACAP,IAAAA,OAAO,CAACK,GAAD,CAAP;AACD,GAHD;;AAKA,QAAMG,kBAAkB,GAAIJ,KAAD,IAAW;AACpC,QAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAvB;AACAL,IAAAA,QAAQ,CAACG,GAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,kBAAkB,GAAG,MAAM;AAC/B,QAAIV,IAAI,KAAKE,KAAb,EAAoB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAGI;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBAAO,qCAAP;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEY,GAFZ,eAGE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEF,IAFT;AAGE,MAAA,WAAW,EAAC,gBAHd;AAIE,MAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,YAHF,eASE;AAAA;AAAA;AAAA;AAAA,YATF,uBAUoB,GAVpB,eAWE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEF,KAFT;AAGE,MAAA,WAAW,EAAC,kBAHd;AAIE,MAAA,QAAQ,EAAEO;AAJZ;AAAA;AAAA;AAAA;AAAA,YAXF,eAiBE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AAqBD,CA7CD;;GAAMV,a;;KAAAA,a;AA+CL,eAAeA,aAAf","sourcesContent":["import React,{ useState } from \"react\";\n\nconst PasswordMatch = () => {\n  const [pswd, setPswd] = useState(\"\");\n  const [cPswd, setCpswd] = useState(\"\");\n\n  const changePswdHandler = (event) => {\n    let val = event.target.value;\n    setPswd(val);\n  };\n\n  const changeCPswdHandler = (event) => {\n    let val = event.target.value;\n    setCpswd(val);\n  };\n\n  const CheckPasswordMatch = () => {\n    if (pswd !== cPswd) {\n      return <div>Passwords do not match</div>;\n    }\n    else{\n        return <div>Password Matched</div>\n    }\n    return <></>;\n  };\n\n  return (\n    <>\n      <h2>Password Match</h2>\n      Password:{\" \"}\n      <input\n        type=\"password\"\n        value={pswd}\n        placeholder=\"Enter Password\"\n        onChange={changePswdHandler}\n      />\n      <br />\n      Confirm Password:{\" \"}\n      <input\n        type=\"password\"\n        value={cPswd}\n        placeholder=\"Confirm Password\"\n        onChange={changeCPswdHandler}\n      />\n      <CheckPasswordMatch />\n    </>\n  );\n};\n\n export default PasswordMatch"]},"metadata":{},"sourceType":"module"}